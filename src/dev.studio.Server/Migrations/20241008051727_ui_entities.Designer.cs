// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using dev.studio.Server.DAL;

#nullable disable

namespace dev.studio.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241008051727_ui_entities")]
    partial class ui_entities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppDataType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PgType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppDataTypes");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AppModuleId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppModuleId");

                    b.ToTable("AppEntities");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppEntityAttribute", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AppDataTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("AppEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DbColumnDefaultValue")
                        .HasColumnType("text");

                    b.Property<int?>("DbColumnLength")
                        .HasColumnType("integer");

                    b.Property<string>("DbColumnName")
                        .HasColumnType("text");

                    b.Property<int?>("DbColumnPrecision")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("ExtReferenceId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsNullable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPrimaryKey")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSearchable")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsUnique")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppDataTypeId");

                    b.HasIndex("AppEntityId");

                    b.HasIndex("ExtReferenceId");

                    b.ToTable("AppEntityAttributes");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppModule", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OltpModuleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SchemaName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppModules");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.CodeTemplate", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TemplateBody")
                        .HasColumnType("text");

                    b.Property<string>("TemplateFileName")
                        .HasColumnType("text");

                    b.Property<bool>("UseFileTemplate")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("CodeTemplates");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.SystemConfig", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("SimpleValue")
                        .HasColumnType("text");

                    b.Property<JsonDocument>("Value")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigs");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIComponent", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComponentLibrary")
                        .HasColumnType("text");

                    b.Property<string>("ComponentName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UIComponents");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIField", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ComponentId")
                        .HasColumnType("integer");

                    b.Property<string>("ModelVarName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Order")
                        .HasColumnType("integer");

                    b.Property<Dictionary<string, string>>("Properties")
                        .HasColumnType("hstore");

                    b.Property<string>("SetModelVarFunctionName")
                        .HasColumnType("text");

                    b.Property<int?>("UIPageAreaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("UIPageAreaId");

                    b.ToTable("UIFields");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIPage", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CodeTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("InlineCodeTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CodeTemplateId");

                    b.ToTable("UIPages");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIPageArea", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CodeTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("InlineCodeTemplate")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("UIPageId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CodeTemplateId");

                    b.HasIndex("UIPageId");

                    b.ToTable("UIPagesAreas");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppEntity", b =>
                {
                    b.HasOne("dev.studio.Server.DAL.Models.AppModule", "AppModule")
                        .WithMany("AppEntities")
                        .HasForeignKey("AppModuleId");

                    b.Navigation("AppModule");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppEntityAttribute", b =>
                {
                    b.HasOne("dev.studio.Server.DAL.Models.AppDataType", "AppDataType")
                        .WithMany()
                        .HasForeignKey("AppDataTypeId");

                    b.HasOne("dev.studio.Server.DAL.Models.AppEntity", "AppEntity")
                        .WithMany("AppEntityAttributes")
                        .HasForeignKey("AppEntityId");

                    b.HasOne("dev.studio.Server.DAL.Models.AppEntityAttribute", "ExtReference")
                        .WithMany()
                        .HasForeignKey("ExtReferenceId");

                    b.Navigation("AppDataType");

                    b.Navigation("AppEntity");

                    b.Navigation("ExtReference");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIComponent", b =>
                {
                    b.OwnsOne("System.Collections.Generic.Dictionary<string, string>", "Properties", b1 =>
                        {
                            b1.Property<int>("UIComponentId")
                                .HasColumnType("integer");

                            b1.HasKey("UIComponentId");

                            b1.ToTable("UIComponents");

                            b1.ToJson("Properties");

                            b1.WithOwner()
                                .HasForeignKey("UIComponentId");
                        });

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIField", b =>
                {
                    b.HasOne("dev.studio.Server.DAL.Models.UIComponent", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId");

                    b.HasOne("dev.studio.Server.DAL.Models.UIPageArea", "UIPageArea")
                        .WithMany("UIFields")
                        .HasForeignKey("UIPageAreaId");

                    b.Navigation("Component");

                    b.Navigation("UIPageArea");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIPage", b =>
                {
                    b.HasOne("dev.studio.Server.DAL.Models.CodeTemplate", "CodeTemplate")
                        .WithMany()
                        .HasForeignKey("CodeTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeTemplate");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIPageArea", b =>
                {
                    b.HasOne("dev.studio.Server.DAL.Models.CodeTemplate", "CodeTemplate")
                        .WithMany()
                        .HasForeignKey("CodeTemplateId");

                    b.HasOne("dev.studio.Server.DAL.Models.UIPage", "UIPage")
                        .WithMany("UIPageAreas")
                        .HasForeignKey("UIPageId");

                    b.Navigation("CodeTemplate");

                    b.Navigation("UIPage");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppEntity", b =>
                {
                    b.Navigation("AppEntityAttributes");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.AppModule", b =>
                {
                    b.Navigation("AppEntities");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIPage", b =>
                {
                    b.Navigation("UIPageAreas");
                });

            modelBuilder.Entity("dev.studio.Server.DAL.Models.UIPageArea", b =>
                {
                    b.Navigation("UIFields");
                });
#pragma warning restore 612, 618
        }
    }
}
